/*
 * Plugins
 */
plugins {
	id 'application'
}




/*
 * Configuration
 */
 
// General
description = 'NIREST Server'

// Applications plugin
mainClassName = 'net.fekepp.nirest.server.Main'

jar {
	manifest {
		attributes	'Implementation-Title': 'NIREST Server',
					'Implementation-Version': version
	}
}




/*
 * Dependencies
 */
dependencies {
	
	
	/*
	 * Compile Dependencies
	 */
	
	//
	// Internal
	//
	
	// NIREST
	compile project(':nirest-api')
	
	
	//
	// External
	//
	
	// Jersey
	compile 'org.glassfish.jersey.containers:jersey-container-jetty-servlet:2.+'
	compile 'org.glassfish.jersey.inject:jersey-hk2:2.+'
	
	// Jetty (include dependencies of Jersey with newer versions)
	compile 'org.eclipse.jetty:jetty-webapp:9.+'
	compile 'org.eclipse.jetty:jetty-continuation:9.+'
	
	// Jetty (additional dependencies)
	compile 'org.eclipse.jetty:jetty-annotations:9.+'
	compile 'org.eclipse.jetty:apache-jsp:9.+'
	
	
	//
	// Local
	//
	
	
	/*
	 * Test Dependencies
	 */
	
	//
	// Internal
	//
	
	
	//
	// External
	//
	
	
	//
	// Local
	//
	
	
}




/*
 * Distribution
 */
distributions {
	
	main {
		
		contents {
			
			into('red') {
			
				from('../redistributables/OpenNI-Linux-x64-2.2.0.33') {
					exclude '**/OpenNI2', '**/*.ini', '**/*.jar'
				}
				
				from('../redistributables/NiTE-Linux-x64-2.2.0.11') {
					exclude '**/*.org.ini', '**/*.jar'
				}
				
			}
			
			into('red/OpenNI2-FreenectDriver') {
				
				from('../redistributables/OpenKinect-OpenNI2-FreenectDriver-0.5.3')
				
			}
			
			into('red') {
				
				from('../redistributables/OpenNI-Linux-x64-2.2.0.33/OpenNI.ini')
				
				filter {
					line -> line.replace(
						'Repository=../OpenKinect-OpenNI2-FreenectDriver-0.5.3',
						'Repository=OpenNI2-FreenectDriver'
					)
				}
				
			}
			
		}
		
	}
	
}




/*
 * Start Scripts
 */
startScripts {
	
	doLast {
		
		unixScript.text =
			unixScript.text.replace(
				'exec',
				'# Required to let the JVM correctly locate native libraries' +
				'\n' +
				'export LD_LIBRARY_PATH="$APP_HOME/red"' +
				'\n\n' +
				'# Required to fix "current working directory" issue of native NiTe libraries' +
				'\n' +
				'cd "$APP_HOME/red"' +
				'\n\n\n' +
				'exec'
			)
		
		windowsScript.delete()
		
	}
	
}
