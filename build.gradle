/*
 * Plugins
 */
plugins {
	id 'eclipse'
	id 'distribution'
}




/*
 * Configuration
 */
description = 'NIREST'




/*
 * Projects
 */
allprojects {


	apply plugin: 'java'
	
	
	/*
	 * Configuration
	 */
	version = '0.1.0-pre.1-SNAPSHOT'
	
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	
	project.ext.nxparser_version = '759560aaff2917c0e853452c9d0adaaefed8ba3c'
	
	
}




/*
 * Subprojects
 */
subprojects {
	
	
	/*
	 * Plugins
	 */
	apply plugin: 'eclipse'
	apply plugin: 'java'
	
	
	/*
	 * Repositories
	 */
	repositories {
	    maven {
	    	url '../dependencies'
	    }
		mavenLocal()
		mavenCentral()
		maven {
			url 'https://jitpack.io'
		}
	}
	
	
	/*
	 * Dependencies
	 */
	dependencies {
		
		
		/*
		 * Compile Dependencies
		 */
		
		//
		// Internal
		//
		
		
		//
		// External
		//
		
		// SLF4J
		compile 'org.slf4j:slf4j-api:1.7.+'
		compile 'org.slf4j:log4j-over-slf4j:1.7.+'
		compile 'org.slf4j:jcl-over-slf4j:1.7.+'
		compile 'ch.qos.logback:logback-classic:1.1.+'
		
		// Common
		compile 'commons-io:commons-io:2.4'
		
		// Caffeine
		compile 'com.github.ben-manes.caffeine:caffeine:2.+'
		
		// NxParser
		//compile 'org.semanticweb.yars:nxparser-parsers:' + rootProject.nxparser_version
		//compile 'org.semanticweb.yars:nxparser-utilities-uri:' + rootProject.nxparser_version
		//compile 'org.semanticweb.yars:nxparser-model-datatypes:' + rootProject.nxparser_version
		//compile 'org.semanticweb.yars:nxparser-api:' + rootProject.nxparser_version
		//compile(group: 'org.semanticweb.yars', name: 'nxparser-jax-rs', version:rootProject.nxparser_version) {
		//	exclude(module: 'slf4j-log4j12')
		//	exclude(module: 'log4j')
		//	exclude(module: 'slf4j-api')
		//}
		
		// Use just-in-time snapshot dependencies till next stable release
		compile 'com.github.nxparser.nxparser:nxparser-parsers:' + rootProject.nxparser_version
		compile 'com.github.nxparser.nxparser:nxparser-utilities-uri:' + rootProject.nxparser_version
		compile 'com.github.nxparser.nxparser:nxparser-model-datatypes:' + rootProject.nxparser_version
		compile 'com.github.nxparser.nxparser:nxparser-api:' + rootProject.nxparser_version
		compile(group: 'com.github.nxparser.nxparser', name: 'nxparser-jax-rs', version:rootProject.nxparser_version) {
			exclude(module: 'slf4j-log4j12')
			exclude(module: 'log4j')
			exclude(module: 'slf4j-api')
		}

		
		//
		// Local
		//
		
		
		/*
		 * Test Dependencies
		 */
		
		//
		// Internal
		//
		
		
		//
		// External
		//
		
		// JUnit
		testCompile 'junit:junit:4.+'
		
		
		//
		// Local
		//
		
		
	}
	
	
}




/*
 * Distribution
 */
distributions {
	
	main {
		
		contents {
		
			into('bin') {
				from { project(':nirest-device').startScripts.outputs.files }
				from { project(':nirest-ldfu').startScripts.outputs.files }
				from { project(':nirest-server').startScripts.outputs.files }
				fileMode = 0755
			}
			
			into('lib') {

				// Include JARs of NIREST Device with dependencies
				from project(':nirest-device').jar
				from project(':nirest-device').configurations.runtime
				
				// Include JARs of NIREST Model with dependencies
				from project(':nirest-model').jar
				from project(':nirest-model').configurations.runtime
				
				// Include JARs of NIREST LD-Fu API with dependencies
				from project(':nirest-ldfu').jar
				from project(':nirest-ldfu').configurations.runtime
				
				// Include JARs of NIREST API with dependencies
				from project(':nirest-api').jar
				from project(':nirest-api').configurations.runtime
				
				// Include JARs of NIREST Server with dependencies
				from project(':nirest-server').jar
				from project(':nirest-server').configurations.runtime
				
			}
			
			into('red') {
			
				from('redistributables/OpenNI-Linux-x64-2.2.0.33') {
					exclude '**/OpenNI2', '**/*.ini', '**/*.jar'
				}
				
				from('redistributables/NiTE-Linux-x64-2.2.0.11') {
					exclude '**/*.org.ini', '**/*.jar'
				}
				
			}
			
			into('red/OpenNI2-FreenectDriver') {
				
				from('redistributables/OpenKinect-OpenNI2-FreenectDriver-0.5.3')
				
			}
			
			into('red') {
				
				from('redistributables/OpenNI-Linux-x64-2.2.0.33/OpenNI.ini')
				
				filter {
					line -> line.replace(
						'Repository=../OpenKinect-OpenNI2-FreenectDriver-0.5.3',
						'Repository=OpenNI2-FreenectDriver'
					)
				}
				
			}
			
		}
		
	}
	
}
